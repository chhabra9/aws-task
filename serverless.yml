service: dynamoDB-crud-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-south-1
  environment: 
    DynamoDB_TABLE_NAME: ${self:custom.userTableName}
  
custom: 
  userTableName: user-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getUser:
    handler: api.getUser
    name: get-user
    memorySize: 128 # MB
    timeout: 5 # seconds
    events: 
      - http: 
          path: api/{userId}
          method: GET
    iamRoleStatements: 
      - Effect: Allow
        Action: 
          - dynamodb:GetItem
        Resource: "arn:aws:dynamodb:{region}:{account}:table/${self:custom.userTableName}"
        
  createUser:
    handler: api.putUser
    name: create-user
    memorySize: 128 # MB
    timeout: 5 # seconds
    events: 
      - http: 
          path: api
          method: POST
    iamRoleStatements: 
      - Effect: Allow
        Action: 
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:{region}:{account}:table/${self:custom.userTableName}"
      
  updateUser:
    handler: api.putUser
    name: update-user
    memorySize: 128 # MB
    timeout: 5 # seconds
    events: 
      - http: 
          path: api/{userId}
          method: PUT
    iamRoleStatements: 
      - Effect: Allow
        Action: 
          - dynamodb:UpdateItem
        Resource: "arn:aws:dynamodb:{region}:{account}:table/${self:custom.userTableName}"
      
  deleteUser:
    handler: api.deleteUser
    name: delete-user
    memorySize: 128 # MB
    timeout: 5 # seconds
    events: 
      - http: 
          path: api
          method: DELETE
    iamRoleStatements: 
      - Effect: Allow
        Action: 
          - dynamodb:DeleteItem
        Resource: "arn:aws:dynamodb:{region}:{account}:table/${self:custom.userTableName}"

resources: 
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
          - AttributeName: name
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: avatar
            AttributeType: S
          - AttributeName: address
            AttributeType: M
          - AttributeName: phone
            AttributeType: S
          - AttributeName: website
            AttributeType: S
          - AttributeName: company_name
            AttributeType: S
          - AttributeName: catch_phrase
            AttributeType: S
          - AttributeName: street
            AttributeType: S
          - AttributeName: suite
            AttributeType: S
          - AttributeName: city
            AttributeType: S
          - AttributeName: zipcode
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
